---
name: "Build Native Image"
"on":
  push:
    branches:
    - "main"
jobs:
  build-native:
    name: "Build Native Image (${{ matrix.arch }})"
    strategy:
      matrix:
        include:
        - arch: "amd64"
          runner: "ubuntu-latest"
          platform: "linux/amd64"
        - arch: "arm64"
          runner: "ubuntu-24.04-arm"
          platform: "linux/arm64"
    runs-on: "${{ matrix.runner }}"
    permissions:
      contents: "read"
      packages: "write"
    steps:
    - name: "Checkout code"
      uses: "actions/checkout@v4"
    - name: "Set up JDK 25"
      uses: "actions/setup-java@v4"
      with:
        java-version: "25"
        distribution: "temurin"
        cache: "maven"
    - name: "Log in to GitHub Container Registry"
      uses: "docker/login-action@v3"
      with:
        registry: "ghcr.io"
        username: "${{ github.actor }}"
        password: "${{ secrets.GITHUB_TOKEN }}"
    - name: "Build with AOT"
      run: "mvn clean package"
    - name: "Build native container image (${{ matrix.arch }})"
      run: "mvn spring-boot:build-image -Pnative \\\n  -Dspring-boot.build-image.imageName=spring.aot.demo:0.0.1-SNAPSHOT-${{\
        \ matrix.arch }} \\\n  -Dspring-boot.build-image.imagePlatform=${{ matrix.platform\
        \ }}\n"
    - name: "Save image metadata"
      run: "docker images spring.aot.demo\ndocker inspect spring.aot.demo:0.0.1-SNAPSHOT-${{\
        \ matrix.arch }} > image-metadata-${{ matrix.arch }}.json\n"
    - name: "Upload image metadata"
      uses: "actions/upload-artifact@v4"
      with:
        name: "image-metadata-${{ matrix.arch }}"
        path: "image-metadata-${{ matrix.arch }}.json"
        retention-days: 30
    - name: "Test native image"
      if: "matrix.arch == 'amd64'"
      run: "# Start the container in background\ndocker run -d --name spring-aot-demo\
        \ -p 8080:8080 spring.aot.demo:0.0.1-SNAPSHOT-${{ matrix.arch }}\n\n# Wait\
        \ for application to start (max 30 seconds)\ntimeout=30\nwhile [ $timeout\
        \ -gt 0 ]; do\n  if docker logs spring-aot-demo 2>&1 | grep -q \"Started SpringAotDemoApplication\"\
        ; then\n    echo \"Application started successfully\"\n    break\n  fi\n \
        \ echo \"Waiting for application to start... ($timeout seconds remaining)\"\
        \n  sleep 2\n  timeout=$((timeout - 2))\ndone\n\n# Test health endpoint\n\
        sleep 5\ncurl -f http://localhost:8080/actuator/health || exit 1\n\n# Test\
        \ products endpoint\ncurl -f http://localhost:8080/api/products || exit 1\n\
        \n# Stop container\ndocker stop spring-aot-demo\ndocker rm spring-aot-demo\n"
    - name: "Tag and push image to GHCR"
      run: "# Tag architecture-specific image\ndocker tag spring.aot.demo:0.0.1-SNAPSHOT-${{\
        \ matrix.arch }} ghcr.io/${{ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-${{\
        \ matrix.arch }}\n\n# Push architecture-specific image\ndocker push ghcr.io/${{\
        \ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-${{ matrix.arch\
        \ }}\n"
    - name: "Upload build logs"
      if: "always()"
      uses: "actions/upload-artifact@v4"
      with:
        name: "build-logs-${{ matrix.arch }}"
        path: "target/*.log"
        retention-days: 7
        if-no-files-found: "ignore"
  create-manifest:
    name: "Create Multi-Arch Manifest"
    needs: "build-native"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      packages: "write"
    steps:
    - name: "Log in to GitHub Container Registry"
      uses: "docker/login-action@v3"
      with:
        registry: "ghcr.io"
        username: "${{ github.actor }}"
        password: "${{ secrets.GITHUB_TOKEN }}"
    - name: "Create and push multi-arch manifests"
      run: "# Create and push multi-arch manifest for version tag\ndocker manifest\
        \ create ghcr.io/${{ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT\
        \ \\\n  ghcr.io/${{ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-amd64\
        \ \\\n  ghcr.io/${{ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-arm64\n\
        \ndocker manifest push ghcr.io/${{ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT\n\
        \n# Create and push multi-arch manifest for latest tag\ndocker manifest create\
        \ ghcr.io/${{ github.repository_owner }}/spring-aot-demo:latest \\\n  ghcr.io/${{\
        \ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-amd64 \\\n  ghcr.io/${{\
        \ github.repository_owner }}/spring-aot-demo:0.0.1-SNAPSHOT-arm64\n\ndocker\
        \ manifest push ghcr.io/${{ github.repository_owner }}/spring-aot-demo:latest"
